#include <bits/stdc++.h>
// Created by Shahd Elnassag on 12/29/2024.
// Problem 5 in Part 1 Dynamic Programming

using namespace std;

int getSubSequence(int num, vector<int>& givenSequence) {
    vector<int> subSuq;

    for (int i = 0; i < num; ++i) {
        // Find the position where Subsequence[i] can replace an element in subSuq using binary search
        auto iteration = lower_bound(subSuq.begin(), subSuq.end(), givenSequence[i]);

        // If Subsequence[i] is greater than all elements in subSuq, append iteration
        if (iteration == subSuq.end()) {
            subSuq.push_back(givenSequence[i]);
        } else {
            // Replace the element at the found position with Subsequence[i]
            *iteration = givenSequence[i];
        }
    }

    return subSuq.size();
}

int main() {
    // test
    int num;
    cin >> num;
    vector<int> givenSequence(num);
    for (int i = 0; i < num; ++i) {
        cin >> givenSequence[i];
    }
    int result = getSubSequence(num, givenSequence);
    cout << result << endl;

    return 0;
}